<?php

namespace Msp\UserBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends EntityRepository
{
    public function getUserByRole( $role )
    {
        $qb = $this->_em->createQueryBuilder();
        $qb ->select('a')
            ->from('MspUserBundle:User', 'a')
            ->where('a.roles like :roles')
            ->setParameter('roles', '%"'.$role.'"%');            
        return  $qb->getQuery()
                ->getResult();
    } 
    
    public function getTotal()
    {
        $qb = $this->createQueryBuilder('a')->select('COUNT(a)'); 
        return (int) $qb->getQuery()->getSingleScalarResult();
    } 
    
    public function getUserTicketAlert()
    {
        $time = mktime('00', '00', '00', date('m'), date('d'), date('Y')) - 30*24*60*60;
        $date = date('Y-m-d', $time);
        
        $qb = $this->_em->createQueryBuilder();
        
        $nots = $this->createQueryBuilder('a')
                ->select('a')
                ->innerJoin('a.tickets', 't')
                ->where('t.date >= :date')
                ->setParameter('date', $date)                
                ->getQuery()
                ->getResult();        
       
        $linked =   $qb->select('a')
                    ->from( $this->_entityName, 'a')                    
                    ->where('a.roles like :roles')
                    ->setParameter('roles', '%ROLE_PROFESSEUR%'); ; 
        
        if($nots):
            $linked->andWhere($qb->expr()->notIn('a.username', $nots));
        endif;
        
        return  $linked->getQuery()->getResult();
    }
    
}
