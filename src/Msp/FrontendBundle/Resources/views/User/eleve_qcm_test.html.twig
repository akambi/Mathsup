{% extends "MspFrontendBundle::eleve-layout.html.twig" %}

{# Le titre de la page (defaut MathSup) #}
{% block title %}QCM "{{ qcm.libelle }}" | {{ parent() }}{% endblock %}
{# La description de la page (defaut vide) #}
{% block description %}{% endblock %}
{# Les mots clés de la page (defaut vide) #}
{% block keywords %}{% endblock %}
{# Indication pour les robots de la page  (defaut all) #}
{% block robots %}noindex, nofollow{% endblock %}

{# Le titre de l'entête du document #}
{% block entetetitle %}QCM "{{ qcm.libelle }}" | {{ parent() }}{% endblock %}
{# La barre latéralke de la page #}
{% block aside %}{{ parent() }}{% endblock %}
{# Le contenu de la page #}
{% block body %}
    <h1>{{ qcm.libelle }} <em id="qcm_time">{{ time }}</em></h1>
    {% if msg %}
    <p class="alert alert-success">{{ msg }}</p>
    <ul class="inline">
        <li>
             <a class="btn" href="{{ path('msp_eleve_qcm') }}">
                <i class="icon-chevron-left"></i> Retour à la liste
            </a>
        </li>
    </ul>
    {% else %}
    <h2>{{ question.libelle }} <em id="question_time">{{ question_time }}</em></h2>
    <form id="quest_form" action="{{ path('msp_eleve_qcm_test', { 'qcm_id': qcm.id, 'question_id': question_id_suiv }) }}" method="post">
        {% for reponse in reponses %}
            <label class="radio">
                <input type="radio" name="reponse" value="{{ reponse.id }}"/>
                {{ reponse.libelle }}
            </label>
        {% endfor %}
        <input type="hidden" id="time" name="time" value="{{ time }}" />
        <input type="hidden" name="question" value="{{ question.id }}" />
        {% if question_id_suiv == 'end' %}
            <input class="btn btn-primary" type="submit" value="Voir ma note" />
        {% else %}
            <input class="btn btn-primary" type="submit" value="Suivant" />
        {% endif %}
    </form>
    <script>
    //  On récupère les elements par leur id
        var qcm_time = document.getElementById("qcm_time");
        var question_time = document.getElementById("question_time");
        var form_time = document.getElementById("time");
        var quest_form = document.getElementById("quest_form");
    //  on recupere les temps
        var time_globale = qcm_time.innerHTML;
        var time_locale = question_time.innerHTML;        
    //  La fonction qui gère le décompte
        function Rebour() {
        //  on décrémente les secondes de 1
            time_globale = time_globale - 1;
            time_locale = time_locale - 1;
            time = time - 1;
        if( time_globale > 0 && time_locale > 0 ){
        //  On définie la minutete, l'heure et la seconde locale et globale
            h_g = Math.floor ( time_globale / 3600 );
            h_l = Math.floor ( time_locale / 3600 );
            
            mn_g = Math.floor ( time_globale / 60 );
            mn_l = Math.floor ( time_locale / 60 );
            
            sec_g = Math.floor ( time_globale - (( h_g * 3600 + mn_g * 60)));
            sec_l = Math.floor ( time_locale - (( h_l * 3600 + mn_l * 60)) );
        //  On affiche l'heure
            qcm_time.innerHTML = "" + h_g +" h "+ mn_g +" min "+ sec_g + " s ";
            question_time.innerHTML = "" + h_l +" h "+ mn_l +" min "+ sec_l + " s ";
            form_time.value = time_globale;
        }else{
            if( time_locale == 0 ){
                quest_form.submit();
            }else{
                
            }
        }
        //  on relance le compte à rebours chaque seconde
            tRebour=setTimeout ("Rebour();", 1000);

        }

        Rebour();
    </script>
    {% endif %}
{% endblock %}